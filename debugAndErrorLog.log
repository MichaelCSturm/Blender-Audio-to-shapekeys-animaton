2025-04-24 18:05:41,605 bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
2025-04-24 18:05:41,605 pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-04-24 18:05:41,605 stack: []
2025-04-24 18:05:41,605 state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-04-24 18:05:41,605 dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-04-24 18:05:41,605 stack []
2025-04-24 18:05:41,606 dispatch pc=2, inst=RESUME(arg=0, lineno=81)
2025-04-24 18:05:41,606 stack []
2025-04-24 18:05:41,606 dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
2025-04-24 18:05:41,606 stack []
2025-04-24 18:05:41,606 dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
2025-04-24 18:05:41,606 stack ['$null$4.1', '$4load_global.0']
2025-04-24 18:05:41,606 dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
2025-04-24 18:05:41,606 stack ['$null$4.1', '$4load_global.0', '$x16.2']
2025-04-24 18:05:41,606 dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
2025-04-24 18:05:41,606 stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
2025-04-24 18:05:41,606 dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
2025-04-24 18:05:41,606 stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
2025-04-24 18:05:41,606 dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
2025-04-24 18:05:41,606 stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
2025-04-24 18:05:41,607 dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
2025-04-24 18:05:41,607 stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
2025-04-24 18:05:41,607 dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
2025-04-24 18:05:41,607 stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
2025-04-24 18:05:41,607 dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
2025-04-24 18:05:41,607 stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-04-24 18:05:41,607 dispatch pc=34, inst=CALL(arg=7, lineno=86)
2025-04-24 18:05:41,607 stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
2025-04-24 18:05:41,607 dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
2025-04-24 18:05:41,607 stack ['$34call.9']
2025-04-24 18:05:41,607 dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
2025-04-24 18:05:41,607 stack []
2025-04-24 18:05:41,607 dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
2025-04-24 18:05:41,607 stack ['$const46.10']
2025-04-24 18:05:41,607 end state. edges=[]
2025-04-24 18:05:41,608 -------------------------Prune PHIs-------------------------
2025-04-24 18:05:41,608 Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-04-24 18:05:41,608 defmap: {}
2025-04-24 18:05:41,608 phismap: defaultdict(<class 'set'>, {})
2025-04-24 18:05:41,608 changing phismap: defaultdict(<class 'set'>, {})
2025-04-24 18:05:41,608 keep phismap: {}
2025-04-24 18:05:41,608 new_out: defaultdict(<class 'dict'>, {})
2025-04-24 18:05:41,608 ----------------------DONE Prune PHIs-----------------------
2025-04-24 18:05:41,608 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10'}), (48, {'retval': '$const46.10', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-04-24 18:05:41,609 label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000002714724C9A0>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10 = const(NoneType, None)      ['$const46.10']
    $48return_value.11 = cast(value=$const46.10) ['$48return_value.11', '$const46.10']
    return $48return_value.11                ['$48return_value.11']

2025-04-24 18:05:41,619 ==== SSA block analysis pass on 0
2025-04-24 18:05:41,619 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151E80590>
2025-04-24 18:05:41,619 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,619 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,619 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,620 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,620 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,620 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,620 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,620 on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000002714724C9A0>))
2025-04-24 18:05:41,620 on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,620 on stmt: $const46.10 = const(NoneType, None)
2025-04-24 18:05:41,620 on stmt: $48return_value.11 = cast(value=$const46.10)
2025-04-24 18:05:41,620 on stmt: return $48return_value.11
2025-04-24 18:05:41,621 defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000027151E771D0>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000027151E776D0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000027151E76410>,
                                  0)],
             '$const46.10': [(<numba.core.ir.Assign object at 0x0000027151E77490>,
                              0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000027151E75E90>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000027151E75D90>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000027151E75F90>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000027151E760D0>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000027151E75C90>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000027151E75B90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000027151E761D0>, 0)]})
2025-04-24 18:05:41,621 SSA violators <numba.core.utils.OrderedSet object at 0x0000027151E80590>
2025-04-24 18:05:41,627 bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
2025-04-24 18:05:41,627 pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-04-24 18:05:41,627 stack: []
2025-04-24 18:05:41,627 state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-04-24 18:05:41,627 dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-04-24 18:05:41,627 stack []
2025-04-24 18:05:41,627 dispatch pc=2, inst=RESUME(arg=0, lineno=7)
2025-04-24 18:05:41,627 stack []
2025-04-24 18:05:41,627 dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
2025-04-24 18:05:41,627 stack []
2025-04-24 18:05:41,627 dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
2025-04-24 18:05:41,627 stack ['$null$4.1', '$4load_global.0']
2025-04-24 18:05:41,627 dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
2025-04-24 18:05:41,627 stack ['$null$4.1', '$4load_global.0', '$scale16.2']
2025-04-24 18:05:41,627 dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
2025-04-24 18:05:41,627 stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
2025-04-24 18:05:41,627 dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
2025-04-24 18:05:41,627 stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-04-24 18:05:41,633 dispatch pc=28, inst=CALL(arg=1, lineno=9)
2025-04-24 18:05:41,633 stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
2025-04-24 18:05:41,633 dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
2025-04-24 18:05:41,633 stack ['$28call.5']
2025-04-24 18:05:41,633 dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
2025-04-24 18:05:41,633 stack ['$const40.6']
2025-04-24 18:05:41,633 dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
2025-04-24 18:05:41,633 stack ['$const44.7']
2025-04-24 18:05:41,633 dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
2025-04-24 18:05:41,633 stack ['$const48.8']
2025-04-24 18:05:41,633 dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
2025-04-24 18:05:41,633 stack ['$const52.9']
2025-04-24 18:05:41,633 dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
2025-04-24 18:05:41,633 stack ['$const56.10']
2025-04-24 18:05:41,633 dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
2025-04-24 18:05:41,633 stack ['$const60.11']
2025-04-24 18:05:41,633 dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
2025-04-24 18:05:41,633 stack ['$const64.12']
2025-04-24 18:05:41,633 dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
2025-04-24 18:05:41,633 stack ['$interp_win68.13']
2025-04-24 18:05:41,633 dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
2025-04-24 18:05:41,633 stack ['$70load_attr.14']
2025-04-24 18:05:41,633 dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-04-24 18:05:41,633 stack ['$70load_attr.14', '$const80.15']
2025-04-24 18:05:41,633 dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
2025-04-24 18:05:41,633 stack ['$82binary_subscr.16']
2025-04-24 18:05:41,633 dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
2025-04-24 18:05:41,633 stack ['$x94.17']
2025-04-24 18:05:41,633 dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
2025-04-24 18:05:41,633 stack ['$96load_attr.18']
2025-04-24 18:05:41,633 dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-04-24 18:05:41,633 stack ['$96load_attr.18', '$const106.19']
2025-04-24 18:05:41,633 dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
2025-04-24 18:05:41,633 stack ['$108binary_subscr.20']
2025-04-24 18:05:41,633 dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
2025-04-24 18:05:41,633 stack ['$t_out120.21']
2025-04-24 18:05:41,633 dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
2025-04-24 18:05:41,633 stack ['$122load_attr.22']
2025-04-24 18:05:41,633 dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-04-24 18:05:41,633 stack ['$122load_attr.22', '$const132.23']
2025-04-24 18:05:41,633 dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
2025-04-24 18:05:41,633 stack ['$134binary_subscr.24']
2025-04-24 18:05:41,633 dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
2025-04-24 18:05:41,633 stack []
2025-04-24 18:05:41,633 dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
2025-04-24 18:05:41,633 stack ['$null$146.26', '$146load_global.25']
2025-04-24 18:05:41,633 dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
2025-04-24 18:05:41,633 stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-04-24 18:05:41,633 dispatch pc=164, inst=CALL(arg=1, lineno=23)
2025-04-24 18:05:41,633 stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
2025-04-24 18:05:41,633 dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
2025-04-24 18:05:41,633 stack ['$164call.28']
2025-04-24 18:05:41,633 end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
2025-04-24 18:05:41,638 pending: deque([State(pc_initial=176 nstack_initial=1)])
2025-04-24 18:05:41,638 stack: ['$phi176.0']
2025-04-24 18:05:41,638 state.pc_initial: State(pc_initial=176 nstack_initial=1)
2025-04-24 18:05:41,638 dispatch pc=176, inst=NOP(arg=1, lineno=23)
2025-04-24 18:05:41,638 stack ['$phi176.0']
2025-04-24 18:05:41,638 end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
2025-04-24 18:05:41,638 pending: deque([State(pc_initial=178 nstack_initial=1)])
2025-04-24 18:05:41,638 stack: ['$phi178.0']
2025-04-24 18:05:41,638 state.pc_initial: State(pc_initial=178 nstack_initial=1)
2025-04-24 18:05:41,638 dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
2025-04-24 18:05:41,638 stack ['$phi178.0']
2025-04-24 18:05:41,638 end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
2025-04-24 18:05:41,638 pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
2025-04-24 18:05:41,638 stack: []
2025-04-24 18:05:41,638 state.pc_initial: State(pc_initial=782 nstack_initial=0)
2025-04-24 18:05:41,638 dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
2025-04-24 18:05:41,638 stack []
2025-04-24 18:05:41,638 dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
2025-04-24 18:05:41,638 stack ['$const782.0']
2025-04-24 18:05:41,638 end state. edges=[]
2025-04-24 18:05:41,638 pending: deque([State(pc_initial=180 nstack_initial=2)])
2025-04-24 18:05:41,638 stack: ['$phi180.0', '$phi180.1']
2025-04-24 18:05:41,638 state.pc_initial: State(pc_initial=180 nstack_initial=2)
2025-04-24 18:05:41,638 dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$phi180.1']
2025-04-24 18:05:41,638 dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
2025-04-24 18:05:41,638 stack ['$phi180.0']
2025-04-24 18:05:41,638 dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$t_out182.2']
2025-04-24 18:05:41,638 dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$t_out182.2', '$t184.3']
2025-04-24 18:05:41,638 dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$186binary_subscr.4']
2025-04-24 18:05:41,638 dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
2025-04-24 18:05:41,638 stack ['$phi180.0']
2025-04-24 18:05:41,638 dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$null$198.6', '$198load_global.5']
2025-04-24 18:05:41,638 dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-04-24 18:05:41,638 dispatch pc=216, inst=CALL(arg=1, lineno=27)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
2025-04-24 18:05:41,638 dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$216call.8']
2025-04-24 18:05:41,638 dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
2025-04-24 18:05:41,638 stack ['$phi180.0']
2025-04-24 18:05:41,638 dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$scale228.9']
2025-04-24 18:05:41,638 dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$scale228.9', '$time_register230.10']
2025-04-24 18:05:41,638 dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
2025-04-24 18:05:41,638 dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
2025-04-24 18:05:41,638 dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$binop_mul238.13']
2025-04-24 18:05:41,638 dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
2025-04-24 18:05:41,638 stack ['$phi180.0']
2025-04-24 18:05:41,638 dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$frac244.14']
2025-04-24 18:05:41,638 dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$frac244.14', '$num_table246.15']
2025-04-24 18:05:41,638 dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$binop_mul248.16']
2025-04-24 18:05:41,638 dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
2025-04-24 18:05:41,638 stack ['$phi180.0']
2025-04-24 18:05:41,638 dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$null$254.18', '$254load_global.17']
2025-04-24 18:05:41,638 dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-04-24 18:05:41,638 dispatch pc=272, inst=CALL(arg=1, lineno=34)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
2025-04-24 18:05:41,638 dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$272call.20']
2025-04-24 18:05:41,638 dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
2025-04-24 18:05:41,638 stack ['$phi180.0']
2025-04-24 18:05:41,638 dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
2025-04-24 18:05:41,638 stack ['$phi180.0', '$index_frac284.21']
2025-04-24 18:05:41,648 dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
2025-04-24 18:05:41,649 stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
2025-04-24 18:05:41,649 dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
2025-04-24 18:05:41,649 stack ['$phi180.0', '$binop_sub288.23']
2025-04-24 18:05:41,649 dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
2025-04-24 18:05:41,649 stack ['$phi180.0']
2025-04-24 18:05:41,649 dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
2025-04-24 18:05:41,649 stack ['$phi180.0', '$null$294.25', '$294load_global.24']
2025-04-24 18:05:41,649 dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
2025-04-24 18:05:41,649 stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
2025-04-24 18:05:41,649 dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
2025-04-24 18:05:41,649 stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27']
2025-04-24 18:05:41,650 dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
2025-04-24 18:05:41,650 stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
2025-04-24 18:05:41,650 dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
2025-04-24 18:05:41,650 stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
2025-04-24 18:05:41,650 dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
2025-04-24 18:05:41,650 stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
2025-04-24 18:05:41,650 dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
2025-04-24 18:05:41,650 stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
2025-04-24 18:05:41,650 dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
2025-04-24 18:05:41,650 stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
2025-04-24 18:05:41,650 dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
2025-04-24 18:05:41,650 stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-04-24 18:05:41,650 dispatch pc=332, inst=CALL(arg=2, lineno=40)
2025-04-24 18:05:41,650 stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
2025-04-24 18:05:41,651 dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
2025-04-24 18:05:41,651 stack ['$phi180.0', '$332call.34']
2025-04-24 18:05:41,651 dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
2025-04-24 18:05:41,651 stack ['$phi180.0']
2025-04-24 18:05:41,651 dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
2025-04-24 18:05:41,651 stack ['$phi180.0', '$null$344.36', '$344load_global.35']
2025-04-24 18:05:41,651 dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
2025-04-24 18:05:41,651 stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-04-24 18:05:41,651 dispatch pc=362, inst=CALL(arg=1, lineno=41)
2025-04-24 18:05:41,651 stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
2025-04-24 18:05:41,651 dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
2025-04-24 18:05:41,651 stack ['$phi180.0', '$362call.38']
2025-04-24 18:05:41,651 end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
2025-04-24 18:05:41,652 pending: deque([State(pc_initial=374 nstack_initial=2)])
2025-04-24 18:05:41,652 stack: ['$phi374.0', '$phi374.1']
2025-04-24 18:05:41,652 state.pc_initial: State(pc_initial=374 nstack_initial=2)
2025-04-24 18:05:41,652 dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
2025-04-24 18:05:41,652 stack ['$phi374.0', '$phi374.1']
2025-04-24 18:05:41,652 end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
2025-04-24 18:05:41,652 pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
2025-04-24 18:05:41,652 stack: ['$phi500.0']
2025-04-24 18:05:41,652 state.pc_initial: State(pc_initial=500 nstack_initial=1)
2025-04-24 18:05:41,652 dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
2025-04-24 18:05:41,652 stack ['$phi500.0']
2025-04-24 18:05:41,652 dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
2025-04-24 18:05:41,652 stack ['$phi500.0', '$scale500.1']
2025-04-24 18:05:41,652 dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
2025-04-24 18:05:41,653 stack ['$phi500.0', '$scale500.1', '$frac502.2']
2025-04-24 18:05:41,653 dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
2025-04-24 18:05:41,653 stack ['$phi500.0', '$binop_sub504.3']
2025-04-24 18:05:41,653 dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
2025-04-24 18:05:41,653 stack ['$phi500.0']
2025-04-24 18:05:41,653 dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
2025-04-24 18:05:41,653 stack ['$phi500.0', '$frac510.4']
2025-04-24 18:05:41,653 dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
2025-04-24 18:05:41,653 stack ['$phi500.0', '$frac510.4', '$num_table512.5']
2025-04-24 18:05:41,653 dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
2025-04-24 18:05:41,653 stack ['$phi500.0', '$binop_mul514.6']
2025-04-24 18:05:41,653 dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
2025-04-24 18:05:41,653 stack ['$phi500.0']
2025-04-24 18:05:41,653 dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
2025-04-24 18:05:41,653 stack ['$phi500.0', '$null$520.8', '$520load_global.7']
2025-04-24 18:05:41,654 dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
2025-04-24 18:05:41,654 stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-04-24 18:05:41,654 dispatch pc=538, inst=CALL(arg=1, lineno=54)
2025-04-24 18:05:41,654 stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
2025-04-24 18:05:41,654 dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
2025-04-24 18:05:41,654 stack ['$phi500.0', '$538call.10']
2025-04-24 18:05:41,654 dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
2025-04-24 18:05:41,654 stack ['$phi500.0']
2025-04-24 18:05:41,654 dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
2025-04-24 18:05:41,654 stack ['$phi500.0', '$index_frac550.11']
2025-04-24 18:05:41,654 dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
2025-04-24 18:05:41,654 stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
2025-04-24 18:05:41,655 dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
2025-04-24 18:05:41,655 stack ['$phi500.0', '$binop_sub554.13']
2025-04-24 18:05:41,655 dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
2025-04-24 18:05:41,655 stack ['$phi500.0']
2025-04-24 18:05:41,655 dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
2025-04-24 18:05:41,655 stack ['$phi500.0', '$null$560.15', '$560load_global.14']
2025-04-24 18:05:41,655 dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
2025-04-24 18:05:41,655 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
2025-04-24 18:05:41,655 dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
2025-04-24 18:05:41,655 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
2025-04-24 18:05:41,655 dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
2025-04-24 18:05:41,655 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
2025-04-24 18:05:41,655 dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
2025-04-24 18:05:41,655 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19']
2025-04-24 18:05:41,656 dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
2025-04-24 18:05:41,656 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
2025-04-24 18:05:41,656 dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
2025-04-24 18:05:41,656 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
2025-04-24 18:05:41,656 dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
2025-04-24 18:05:41,656 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
2025-04-24 18:05:41,656 dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
2025-04-24 18:05:41,656 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
2025-04-24 18:05:41,656 dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
2025-04-24 18:05:41,656 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
2025-04-24 18:05:41,656 dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
2025-04-24 18:05:41,656 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-04-24 18:05:41,656 dispatch pc=604, inst=CALL(arg=2, lineno=60)
2025-04-24 18:05:41,656 stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
2025-04-24 18:05:41,656 dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
2025-04-24 18:05:41,657 stack ['$phi500.0', '$604call.26']
2025-04-24 18:05:41,657 dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
2025-04-24 18:05:41,657 stack ['$phi500.0']
2025-04-24 18:05:41,657 dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
2025-04-24 18:05:41,657 stack ['$phi500.0', '$null$616.28', '$616load_global.27']
2025-04-24 18:05:41,657 dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
2025-04-24 18:05:41,657 stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-04-24 18:05:41,657 dispatch pc=634, inst=CALL(arg=1, lineno=61)
2025-04-24 18:05:41,657 stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
2025-04-24 18:05:41,657 dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
2025-04-24 18:05:41,657 stack ['$phi500.0', '$634call.30']
2025-04-24 18:05:41,657 end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
2025-04-24 18:05:41,657 pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
2025-04-24 18:05:41,657 stack: ['$phi376.0', '$phi376.1', '$phi376.2']
2025-04-24 18:05:41,658 state.pc_initial: State(pc_initial=376 nstack_initial=3)
2025-04-24 18:05:41,658 dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
2025-04-24 18:05:41,658 stack ['$phi376.0', '$phi376.1', '$phi376.2']
2025-04-24 18:05:41,658 dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
2025-04-24 18:05:41,658 stack ['$phi376.0', '$phi376.1']
2025-04-24 18:05:41,658 dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
2025-04-24 18:05:41,658 stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
2025-04-24 18:05:41,658 dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
2025-04-24 18:05:41,658 stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
2025-04-24 18:05:41,658 dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
2025-04-24 18:05:41,658 stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
2025-04-24 18:05:41,658 dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
2025-04-24 18:05:41,658 stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
2025-04-24 18:05:41,658 dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
2025-04-24 18:05:41,658 stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
2025-04-24 18:05:41,658 dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-04-24 18:05:41,659 stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
2025-04-24 18:05:41,659 dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
2025-04-24 18:05:41,659 stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
2025-04-24 18:05:41,659 dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
2025-04-24 18:05:41,659 stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
2025-04-24 18:05:41,659 dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
2025-04-24 18:05:41,659 stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
2025-04-24 18:05:41,659 dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
2025-04-24 18:05:41,659 stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
2025-04-24 18:05:41,659 dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
2025-04-24 18:05:41,659 stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
2025-04-24 18:05:41,659 dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
2025-04-24 18:05:41,659 stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
2025-04-24 18:05:41,659 dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
2025-04-24 18:05:41,659 stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
2025-04-24 18:05:41,660 dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-04-24 18:05:41,660 stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
2025-04-24 18:05:41,660 dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
2025-04-24 18:05:41,660 stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
2025-04-24 18:05:41,660 dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
2025-04-24 18:05:41,660 stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
2025-04-24 18:05:41,660 dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
2025-04-24 18:05:41,660 stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
2025-04-24 18:05:41,660 dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
2025-04-24 18:05:41,660 stack ['$phi376.0', '$phi376.1']
2025-04-24 18:05:41,660 dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
2025-04-24 18:05:41,660 stack ['$phi376.0', '$phi376.1', '$y442.20']
2025-04-24 18:05:41,660 dispatch pc=446, inst=COPY(arg=2, lineno=47)
2025-04-24 18:05:41,660 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
2025-04-24 18:05:41,660 dispatch pc=448, inst=COPY(arg=2, lineno=47)
2025-04-24 18:05:41,661 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
2025-04-24 18:05:41,665 dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-04-24 18:05:41,666 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
2025-04-24 18:05:41,666 dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
2025-04-24 18:05:41,666 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
2025-04-24 18:05:41,666 dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
2025-04-24 18:05:41,666 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
2025-04-24 18:05:41,666 dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
2025-04-24 18:05:41,666 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
2025-04-24 18:05:41,666 dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
2025-04-24 18:05:41,666 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
2025-04-24 18:05:41,667 dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
2025-04-24 18:05:41,667 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
2025-04-24 18:05:41,667 dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-04-24 18:05:41,667 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
2025-04-24 18:05:41,667 dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
2025-04-24 18:05:41,667 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
2025-04-24 18:05:41,667 dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
2025-04-24 18:05:41,667 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
2025-04-24 18:05:41,667 dispatch pc=490, inst=SWAP(arg=3, lineno=47)
2025-04-24 18:05:41,667 stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
2025-04-24 18:05:41,667 dispatch pc=492, inst=SWAP(arg=2, lineno=47)
2025-04-24 18:05:41,667 stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
2025-04-24 18:05:41,667 dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-04-24 18:05:41,667 stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
2025-04-24 18:05:41,668 dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
2025-04-24 18:05:41,668 stack ['$phi376.0', '$phi376.1']
2025-04-24 18:05:41,668 end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
2025-04-24 18:05:41,668 pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
2025-04-24 18:05:41,668 stack: ['$phi646.0', '$phi646.1']
2025-04-24 18:05:41,668 state.pc_initial: State(pc_initial=646 nstack_initial=2)
2025-04-24 18:05:41,668 dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
2025-04-24 18:05:41,668 stack ['$phi646.0', '$phi646.1']
2025-04-24 18:05:41,668 end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
2025-04-24 18:05:41,668 pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-04-24 18:05:41,668 pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
2025-04-24 18:05:41,668 stack: ['$phi778.0']
2025-04-24 18:05:41,668 state.pc_initial: State(pc_initial=778 nstack_initial=1)
2025-04-24 18:05:41,668 dispatch pc=778, inst=NOP(arg=1, lineno=61)
2025-04-24 18:05:41,668 stack ['$phi778.0']
2025-04-24 18:05:41,669 dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
2025-04-24 18:05:41,669 stack ['$phi778.0']
2025-04-24 18:05:41,669 end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
2025-04-24 18:05:41,669 pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
2025-04-24 18:05:41,669 stack: ['$phi648.0', '$phi648.1', '$phi648.2']
2025-04-24 18:05:41,669 state.pc_initial: State(pc_initial=648 nstack_initial=3)
2025-04-24 18:05:41,669 dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
2025-04-24 18:05:41,669 stack ['$phi648.0', '$phi648.1', '$phi648.2']
2025-04-24 18:05:41,669 dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
2025-04-24 18:05:41,669 stack ['$phi648.0', '$phi648.1']
2025-04-24 18:05:41,669 dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
2025-04-24 18:05:41,669 stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
2025-04-24 18:05:41,669 dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
2025-04-24 18:05:41,669 stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
2025-04-24 18:05:41,669 dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
2025-04-24 18:05:41,669 stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
2025-04-24 18:05:41,670 dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
2025-04-24 18:05:41,670 stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
2025-04-24 18:05:41,670 dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
2025-04-24 18:05:41,670 stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
2025-04-24 18:05:41,670 dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-04-24 18:05:41,670 stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
2025-04-24 18:05:41,670 dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
2025-04-24 18:05:41,670 stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
2025-04-24 18:05:41,670 dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
2025-04-24 18:05:41,670 stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
2025-04-24 18:05:41,670 dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
2025-04-24 18:05:41,670 stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
2025-04-24 18:05:41,670 dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
2025-04-24 18:05:41,670 stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
2025-04-24 18:05:41,670 dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
2025-04-24 18:05:41,671 stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
2025-04-24 18:05:41,671 dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
2025-04-24 18:05:41,671 stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
2025-04-24 18:05:41,671 dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
2025-04-24 18:05:41,671 stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
2025-04-24 18:05:41,671 dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-04-24 18:05:41,671 stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
2025-04-24 18:05:41,671 dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
2025-04-24 18:05:41,671 stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
2025-04-24 18:05:41,671 dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
2025-04-24 18:05:41,671 stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
2025-04-24 18:05:41,671 dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
2025-04-24 18:05:41,671 stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
2025-04-24 18:05:41,671 dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
2025-04-24 18:05:41,671 stack ['$phi648.0', '$phi648.1']
2025-04-24 18:05:41,672 dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
2025-04-24 18:05:41,672 stack ['$phi648.0', '$phi648.1', '$y714.20']
2025-04-24 18:05:41,672 dispatch pc=718, inst=COPY(arg=2, lineno=66)
2025-04-24 18:05:41,672 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
2025-04-24 18:05:41,672 dispatch pc=720, inst=COPY(arg=2, lineno=66)
2025-04-24 18:05:41,672 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
2025-04-24 18:05:41,672 dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-04-24 18:05:41,672 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
2025-04-24 18:05:41,672 dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
2025-04-24 18:05:41,672 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
2025-04-24 18:05:41,672 dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
2025-04-24 18:05:41,672 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
2025-04-24 18:05:41,672 dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
2025-04-24 18:05:41,672 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
2025-04-24 18:05:41,672 dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
2025-04-24 18:05:41,672 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
2025-04-24 18:05:41,673 dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
2025-04-24 18:05:41,673 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
2025-04-24 18:05:41,673 dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
2025-04-24 18:05:41,673 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
2025-04-24 18:05:41,673 dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
2025-04-24 18:05:41,673 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28']
2025-04-24 18:05:41,673 dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-04-24 18:05:41,673 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
2025-04-24 18:05:41,673 dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
2025-04-24 18:05:41,673 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
2025-04-24 18:05:41,673 dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
2025-04-24 18:05:41,673 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
2025-04-24 18:05:41,673 dispatch pc=768, inst=SWAP(arg=3, lineno=66)
2025-04-24 18:05:41,673 stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
2025-04-24 18:05:41,674 dispatch pc=770, inst=SWAP(arg=2, lineno=66)
2025-04-24 18:05:41,674 stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
2025-04-24 18:05:41,674 dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-04-24 18:05:41,674 stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
2025-04-24 18:05:41,674 dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
2025-04-24 18:05:41,674 stack ['$phi648.0', '$phi648.1']
2025-04-24 18:05:41,674 end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
2025-04-24 18:05:41,674 pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
2025-04-24 18:05:41,674 pending: deque([State(pc_initial=646 nstack_initial=2)])
2025-04-24 18:05:41,674 -------------------------Prune PHIs-------------------------
2025-04-24 18:05:41,674 Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
2025-04-24 18:05:41,675 defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
2025-04-24 18:05:41,675 phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
2025-04-24 18:05:41,682 changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-04-24 18:05:41,684 changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-04-24 18:05:41,684 changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
2025-04-24 18:05:41,684 keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
2025-04-24 18:05:41,684 new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
2025-04-24 18:05:41,684 ----------------------DONE Prune PHIs-----------------------
2025-04-24 18:05:41,684 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6'}), (42, {'value': '$const40.6'}), (44, {'res': '$const44.7'}), (46, {'value': '$const44.7'}), (48, {'res': '$const48.8'}), (50, {'value': '$const48.8'}), (52, {'res': '$const52.9'}), (54, {'value': '$const52.9'}), (56, {'res': '$const56.10'}), (58, {'value': '$const56.10'}), (60, {'res': '$const60.11'}), (62, {'value': '$const60.11'}), (64, {'res': '$const64.12'}), (66, {'value': '$const64.12'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15'}), (82, {'index': '$const80.15', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19'}), (108, {'index': '$const106.19', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23'}), (134, {'index': '$const132.23', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
2025-04-24 18:05:41,684 block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
2025-04-24 18:05:41,684 block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
2025-04-24 18:05:41,684 block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
2025-04-24 18:05:41,684 block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
2025-04-24 18:05:41,684 block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
2025-04-24 18:05:41,684 block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
2025-04-24 18:05:41,684 block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
2025-04-24 18:05:41,684 block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
2025-04-24 18:05:41,684 block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
2025-04-24 18:05:41,684 block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0'}), (784, {'retval': '$const782.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-04-24 18:05:41,703 label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15 = const(int, 0)              ['$const80.15']
    nwin = getitem(value=$70load_attr.14, index=$const80.15, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19 = const(int, 0)             ['$const106.19']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23 = const(int, 0)             ['$const132.23']
    n_out = getitem(value=$122load_attr.22, index=$const132.23, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27 = const(int, 1)             ['$const308.27']
    $binop_add310.28 = n + $const308.27      ['$binop_add310.28', '$const308.27', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19 = const(int, 1)             ['$const580.19']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28 = const(int, 1)             ['$const744.28']
    $binop_add746.29 = $binop_add740.27 + $const744.28 ['$binop_add740.27', '$binop_add746.29', '$const744.28']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0 = const(NoneType, None)      ['$const782.0']
    $784return_value.1 = cast(value=$const782.0) ['$784return_value.1', '$const782.0']
    return $784return_value.1                ['$784return_value.1']

2025-04-24 18:05:41,766 ==== SSA block analysis pass on 0
2025-04-24 18:05:41,766 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,766 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,766 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,766 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,766 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,766 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,766 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,766 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,766 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,766 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,766 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,766 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,766 on stmt: n = const(int, 0)
2025-04-24 18:05:41,766 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,766 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,766 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,766 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,766 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,766 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,766 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,766 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,766 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,766 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,766 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,766 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,766 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,766 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,766 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,766 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,766 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,766 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,766 on stmt: jump 176
2025-04-24 18:05:41,766 ==== SSA block analysis pass on 176
2025-04-24 18:05:41,766 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,766 on stmt: jump 178
2025-04-24 18:05:41,766 ==== SSA block analysis pass on 178
2025-04-24 18:05:41,766 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,766 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,766 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,766 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,766 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,766 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,766 ==== SSA block analysis pass on 180
2025-04-24 18:05:41,766 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,766 on stmt: t = $phi180.1
2025-04-24 18:05:41,766 on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,773 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,773 on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,773 on stmt: $binop_sub234.12 = time_register - n
2025-04-24 18:05:41,773 on stmt: frac = scale * $binop_sub234.12
2025-04-24 18:05:41,773 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,773 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,773 on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,773 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,773 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,773 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,773 on stmt: $binop_add310.28 = n + $const308.27
2025-04-24 18:05:41,773 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,773 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,773 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,773 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,773 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,773 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,773 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,773 on stmt: jump 374
2025-04-24 18:05:41,773 ==== SSA block analysis pass on 374
2025-04-24 18:05:41,773 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,773 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,773 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,773 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,773 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,773 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,773 ==== SSA block analysis pass on 376
2025-04-24 18:05:41,773 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,773 on stmt: i = $phi376.2
2025-04-24 18:05:41,773 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,773 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,773 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,773 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,773 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,773 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,773 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,773 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,773 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,773 on stmt: $binop_sub468.27 = n - i
2025-04-24 18:05:41,773 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,773 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,773 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,773 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,773 on stmt: jump 374
2025-04-24 18:05:41,773 ==== SSA block analysis pass on 500
2025-04-24 18:05:41,773 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,773 on stmt: $binop_sub504.3 = scale - frac
2025-04-24 18:05:41,773 on stmt: frac = $binop_sub504.3
2025-04-24 18:05:41,773 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,773 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,773 on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,773 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,773 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,773 on stmt: $binop_sub576.18 = n_orig - n
2025-04-24 18:05:41,773 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,773 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,773 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,773 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,773 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,782 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,783 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,783 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,783 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,783 on stmt: jump 646
2025-04-24 18:05:41,783 ==== SSA block analysis pass on 646
2025-04-24 18:05:41,783 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,783 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,783 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,783 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,783 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,783 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,783 ==== SSA block analysis pass on 648
2025-04-24 18:05:41,783 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,783 on stmt: k = $phi648.2
2025-04-24 18:05:41,783 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,783 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,783 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,783 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,783 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,783 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,783 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,783 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,783 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,783 on stmt: $binop_add740.27 = n + k
2025-04-24 18:05:41,783 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,783 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,783 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,783 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,783 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,783 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,783 on stmt: jump 646
2025-04-24 18:05:41,783 ==== SSA block analysis pass on 778
2025-04-24 18:05:41,783 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,783 on stmt: jump 176
2025-04-24 18:05:41,783 ==== SSA block analysis pass on 782
2025-04-24 18:05:41,783 Running <numba.core.ssa._GatherDefsHandler object at 0x0000027151EC4D50>
2025-04-24 18:05:41,783 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,783 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,783 on stmt: return $784return_value.1
2025-04-24 18:05:41,788 defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000027151ECB1D0>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000027151ECB9D0>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000027151ECBED0>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000027151ED4150>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000027151ECAFD0>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000027151ED4250>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000027151ED43D0>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000027151ED4F10>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000027151ED6710>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000027151ED7350>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000027151ED8810>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000027151ED8D10>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000027151ED9010>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000027151ED5650>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000027151ED5450>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000027151ED5ED0>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000027151ED9B90>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000027151EDA950>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000027151EDB4D0>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000027151EE8090>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000027151E83A90>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000027151EE8850>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000027151EE9A50>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000027151EEAFD0>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000027151EEB350>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000027151EEB550>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000027151EE8E90>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000027151EE9250>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000027151EE9BD0>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000027151EEC2D0>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000027151EECFD0>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000027151ECA150>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000027151EEDA50>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000027151EEE850>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000027151EED6D0>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000027151ECA910>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000027151ED7850>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000027151ED9950>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000027151EDA7D0>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000027151EEC150>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000027151EECE10>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000027151EEE2D0>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000027151EEE690>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000027151ED81D0>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000027151EEAB10>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000027151EE8510>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000027151EEEC90>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000027151EC7090>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000027151ED9710>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000027151EDA5D0>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000027151EDAC90>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000027151EE8350>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000027151EEBF10>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000027151EECC10>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000027151EED210>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000027151EEEA90>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000027151ED5BD0>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000027151ED7D50>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000027151EDBE50>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000027151EDB2D0>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000027151EE9F50>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000027151EEA2D0>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000027151EEA790>,
                                   500)],
             '$const106.19': [(<numba.core.ir.Assign object at 0x0000027151ECAA90>,
                               0)],
             '$const132.23': [(<numba.core.ir.Assign object at 0x0000027151ECB410>,
                               0)],
             '$const308.27': [(<numba.core.ir.Assign object at 0x0000027151ED7650>,
                               180)],
             '$const580.19': [(<numba.core.ir.Assign object at 0x0000027151EEA0D0>,
                               500)],
             '$const744.28': [(<numba.core.ir.Assign object at 0x0000027151EEE490>,
                               648)],
             '$const782.0': [(<numba.core.ir.Assign object at 0x0000027151EEC590>,
                              782)],
             '$const80.15': [(<numba.core.ir.Assign object at 0x0000027151ECA2D0>,
                              0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000027151E76F90>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000027151E83190>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000027151EACAD0>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000027151ED6250>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000027151EDB110>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000027151EEA450>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000027151EC9A50>, 0),
                     (<numba.core.ir.Assign object at 0x0000027151ED7090>, 180),
                     (<numba.core.ir.Assign object at 0x0000027151EE97D0>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000027151EC91D0>, 0),
                      (<numba.core.ir.Assign object at 0x0000027151ED5DD0>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000027151ED9490>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000027151ED71D0>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000027151ED8490>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000027151EC93D0>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000027151ED6490>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000027151EE8B90>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000027151EC4590>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000027151EAF910>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000027151EAD310>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000027151EEB6D0>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000027151EEAD10>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000027151E8F910>, 0),
                   (<numba.core.ir.Assign object at 0x0000027151ED53D0>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000027151EBE190>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000027151EBE310>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000027151EADD90>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000027151EAFD10>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000027151EC9790>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000027151ED6A90>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000027151EE9110>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000027151EACB50>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000027151ED46D0>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000027151E63790>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000027151E8C210>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000027151ED4C10>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000027151EC9D10>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000027151EDAE90>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000027151EED450>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000027151EB2050>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000027151E80C90>, 0)]})
2025-04-24 18:05:41,788 SSA violators <numba.core.utils.OrderedSet object at 0x0000027151E62090>
2025-04-24 18:05:41,788 Fix SSA violator on var time_register
2025-04-24 18:05:41,788 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,788 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,788 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,788 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,788 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,788 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,788 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,788 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,788 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,788 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,788 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,788 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,788 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,788 first assign: time_register
2025-04-24 18:05:41,788 replaced with: time_register = const(float, 0.0)
2025-04-24 18:05:41,788 on stmt: n = const(int, 0)
2025-04-24 18:05:41,788 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,788 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,788 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,788 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,788 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,788 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,788 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,788 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,788 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,788 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,788 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,788 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,788 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,788 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,788 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,788 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,788 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,788 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,788 on stmt: jump 176
2025-04-24 18:05:41,788 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,788 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,788 on stmt: jump 178
2025-04-24 18:05:41,788 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,788 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,788 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,788 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,788 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,788 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,788 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,788 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,788 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,788 on stmt: t = $phi180.1
2025-04-24 18:05:41,788 on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,788 replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,793 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,793 on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,793 on stmt: $binop_sub234.12 = time_register - n
2025-04-24 18:05:41,793 on stmt: frac = scale * $binop_sub234.12
2025-04-24 18:05:41,793 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,793 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,793 on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,793 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,793 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,793 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,793 on stmt: $binop_add310.28 = n + $const308.27
2025-04-24 18:05:41,793 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,793 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,793 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,793 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,793 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,793 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,793 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,793 on stmt: jump 374
2025-04-24 18:05:41,793 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,793 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,797 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,798 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,798 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,798 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,798 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,798 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,798 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,798 on stmt: i = $phi376.2
2025-04-24 18:05:41,798 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,798 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,798 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,798 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,798 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,798 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,798 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,798 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,798 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,798 on stmt: $binop_sub468.27 = n - i
2025-04-24 18:05:41,798 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,798 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,798 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,798 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,798 on stmt: jump 374
2025-04-24 18:05:41,798 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,798 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,798 on stmt: $binop_sub504.3 = scale - frac
2025-04-24 18:05:41,798 on stmt: frac = $binop_sub504.3
2025-04-24 18:05:41,798 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,798 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,798 on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,798 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,798 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,798 on stmt: $binop_sub576.18 = n_orig - n
2025-04-24 18:05:41,798 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,798 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,798 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,803 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,803 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,803 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,803 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,803 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,803 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,803 on stmt: jump 646
2025-04-24 18:05:41,803 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,803 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,803 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,803 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,803 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,803 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,803 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,803 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,803 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,803 on stmt: k = $phi648.2
2025-04-24 18:05:41,803 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,803 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,803 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,803 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,803 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,803 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,803 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,803 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,803 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,803 on stmt: $binop_add740.27 = n + k
2025-04-24 18:05:41,803 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,803 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,803 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,803 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,803 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,803 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,803 on stmt: jump 646
2025-04-24 18:05:41,803 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,803 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,803 on stmt: jump 176
2025-04-24 18:05:41,803 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,803 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8DAD0>
2025-04-24 18:05:41,803 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,803 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,803 on stmt: return $784return_value.1
2025-04-24 18:05:41,803 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027151EE8BD0>],
             180: [<numba.core.ir.Assign object at 0x0000027151EBC3D0>]})
2025-04-24 18:05:41,803 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,808 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,808 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,808 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,808 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,808 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,808 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,808 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,808 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,808 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,808 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,808 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,808 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,808 on stmt: n = const(int, 0)
2025-04-24 18:05:41,808 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,808 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,808 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,808 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,808 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,808 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,808 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,808 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,808 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,808 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,808 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,808 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,808 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,808 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,808 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,808 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,808 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,808 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,808 on stmt: jump 176
2025-04-24 18:05:41,808 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,808 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,808 on stmt: jump 178
2025-04-24 18:05:41,808 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,808 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,808 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,808 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,808 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,808 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,808 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,808 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,808 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,808 on stmt: t = $phi180.1
2025-04-24 18:05:41,808 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,808 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,808 on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,814 find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,814 replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,814 on stmt: $binop_sub234.12 = time_register - n
2025-04-24 18:05:41,814 find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
2025-04-24 18:05:41,814 replaced with: $binop_sub234.12 = time_register.1 - n
2025-04-24 18:05:41,814 on stmt: frac = scale * $binop_sub234.12
2025-04-24 18:05:41,814 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,814 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,814 on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,814 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,814 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,814 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,814 on stmt: $binop_add310.28 = n + $const308.27
2025-04-24 18:05:41,814 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,814 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,814 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,814 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,814 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,814 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,814 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,814 on stmt: jump 374
2025-04-24 18:05:41,814 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,814 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,814 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,814 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,814 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,814 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,814 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,814 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,814 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,814 on stmt: i = $phi376.2
2025-04-24 18:05:41,814 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,814 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,814 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,814 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,814 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,814 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,814 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,814 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,814 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,814 on stmt: $binop_sub468.27 = n - i
2025-04-24 18:05:41,814 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,814 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,814 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,814 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,814 on stmt: jump 374
2025-04-24 18:05:41,814 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,814 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,814 on stmt: $binop_sub504.3 = scale - frac
2025-04-24 18:05:41,814 on stmt: frac = $binop_sub504.3
2025-04-24 18:05:41,814 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,814 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,814 on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,814 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,814 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,814 on stmt: $binop_sub576.18 = n_orig - n
2025-04-24 18:05:41,814 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,814 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,814 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,814 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,814 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,814 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,814 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,814 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,814 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,814 on stmt: jump 646
2025-04-24 18:05:41,814 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,814 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,814 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,814 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,814 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,814 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,814 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,814 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,814 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,814 on stmt: k = $phi648.2
2025-04-24 18:05:41,814 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,814 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,814 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,814 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,814 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,814 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,814 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,814 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,814 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,814 on stmt: $binop_add740.27 = n + k
2025-04-24 18:05:41,814 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,814 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,814 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,814 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,814 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,814 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,823 on stmt: jump 646
2025-04-24 18:05:41,823 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,823 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,823 on stmt: jump 176
2025-04-24 18:05:41,823 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,823 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBC410>
2025-04-24 18:05:41,823 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,823 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,823 on stmt: return $784return_value.1
2025-04-24 18:05:41,823 Fix SSA violator on var n
2025-04-24 18:05:41,823 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,823 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,823 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,823 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,823 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,823 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,823 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,823 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,823 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,823 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,823 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,823 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,823 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,823 on stmt: n = const(int, 0)
2025-04-24 18:05:41,823 first assign: n
2025-04-24 18:05:41,823 replaced with: n = const(int, 0)
2025-04-24 18:05:41,823 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,823 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,823 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,823 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,823 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,823 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,823 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,823 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,823 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,823 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,823 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,823 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,823 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,823 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,823 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,823 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,823 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,823 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,823 on stmt: jump 176
2025-04-24 18:05:41,823 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,823 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,823 on stmt: jump 178
2025-04-24 18:05:41,823 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,823 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,823 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,823 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,823 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,823 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,823 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,823 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,823 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,823 on stmt: t = $phi180.1
2025-04-24 18:05:41,823 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,823 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,823 on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,823 replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,823 on stmt: $binop_sub234.12 = time_register.1 - n
2025-04-24 18:05:41,823 on stmt: frac = scale * $binop_sub234.12
2025-04-24 18:05:41,823 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,833 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,833 on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,833 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,833 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,833 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,833 on stmt: $binop_add310.28 = n + $const308.27
2025-04-24 18:05:41,833 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,833 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,833 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,833 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,833 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,833 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,833 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,833 on stmt: jump 374
2025-04-24 18:05:41,833 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,833 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,833 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,833 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,833 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,833 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,833 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,833 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,833 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,833 on stmt: i = $phi376.2
2025-04-24 18:05:41,833 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,833 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,833 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,833 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,833 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,833 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,833 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,833 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,833 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,833 on stmt: $binop_sub468.27 = n - i
2025-04-24 18:05:41,833 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,833 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,833 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,833 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,833 on stmt: jump 374
2025-04-24 18:05:41,833 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,833 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,833 on stmt: $binop_sub504.3 = scale - frac
2025-04-24 18:05:41,833 on stmt: frac = $binop_sub504.3
2025-04-24 18:05:41,833 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,833 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,833 on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,833 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,833 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,833 on stmt: $binop_sub576.18 = n_orig - n
2025-04-24 18:05:41,833 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,833 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,833 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,833 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,833 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,833 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,833 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,838 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,838 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,838 on stmt: jump 646
2025-04-24 18:05:41,838 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,838 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,838 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,838 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,838 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,838 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,838 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,838 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,838 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,838 on stmt: k = $phi648.2
2025-04-24 18:05:41,838 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,838 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,838 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,838 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,838 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,838 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,838 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,838 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,838 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,838 on stmt: $binop_add740.27 = n + k
2025-04-24 18:05:41,838 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,838 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,838 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,838 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,838 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,838 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,838 on stmt: jump 646
2025-04-24 18:05:41,838 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,838 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,838 on stmt: jump 176
2025-04-24 18:05:41,838 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,838 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151E8E9D0>
2025-04-24 18:05:41,838 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,838 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,838 on stmt: return $784return_value.1
2025-04-24 18:05:41,838 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027151E8CCD0>],
             180: [<numba.core.ir.Assign object at 0x0000027151EBC110>]})
2025-04-24 18:05:41,838 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,838 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,838 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,838 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,838 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,838 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,838 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,838 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,838 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,838 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,838 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,838 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,838 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,838 on stmt: n = const(int, 0)
2025-04-24 18:05:41,838 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,838 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,838 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,838 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,838 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,838 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,838 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,838 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,838 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,838 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,838 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,838 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,838 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,838 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,838 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,838 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,838 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,838 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,838 on stmt: jump 176
2025-04-24 18:05:41,838 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,838 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,838 on stmt: jump 178
2025-04-24 18:05:41,838 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,838 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,838 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,838 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,843 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,843 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,843 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,843 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,843 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,843 on stmt: t = $phi180.1
2025-04-24 18:05:41,843 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,843 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,843 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,843 on stmt: $binop_sub234.12 = time_register.1 - n
2025-04-24 18:05:41,843 find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
2025-04-24 18:05:41,843 replaced with: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:41,843 on stmt: frac = scale * $binop_sub234.12
2025-04-24 18:05:41,843 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,843 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,843 on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,843 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,846 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,846 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,846 on stmt: $binop_add310.28 = n + $const308.27
2025-04-24 18:05:41,846 find_def var='n' stmt=$binop_add310.28 = n + $const308.27
2025-04-24 18:05:41,846 replaced with: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:41,846 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,846 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,846 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,846 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,846 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,846 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,846 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,846 on stmt: jump 374
2025-04-24 18:05:41,846 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,846 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,846 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,846 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,846 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,846 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,846 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,846 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,846 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,846 on stmt: i = $phi376.2
2025-04-24 18:05:41,846 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,846 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,846 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,846 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,846 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,853 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,853 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,853 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,853 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,853 on stmt: $binop_sub468.27 = n - i
2025-04-24 18:05:41,853 find_def var='n' stmt=$binop_sub468.27 = n - i
2025-04-24 18:05:41,853 find_def_from_top label 376
2025-04-24 18:05:41,853 idom 374 from label 376
2025-04-24 18:05:41,853 find_def_from_bottom label 374
2025-04-24 18:05:41,853 find_def_from_top label 374
2025-04-24 18:05:41,853 idom 180 from label 374
2025-04-24 18:05:41,853 find_def_from_bottom label 180
2025-04-24 18:05:41,853 replaced with: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:41,853 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,853 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,853 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,853 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,853 on stmt: jump 374
2025-04-24 18:05:41,853 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,853 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,853 on stmt: $binop_sub504.3 = scale - frac
2025-04-24 18:05:41,853 on stmt: frac = $binop_sub504.3
2025-04-24 18:05:41,853 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,853 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,853 on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,853 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,853 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,853 on stmt: $binop_sub576.18 = n_orig - n
2025-04-24 18:05:41,853 find_def var='n' stmt=$binop_sub576.18 = n_orig - n
2025-04-24 18:05:41,853 find_def_from_top label 500
2025-04-24 18:05:41,853 idom 374 from label 500
2025-04-24 18:05:41,853 find_def_from_bottom label 374
2025-04-24 18:05:41,853 find_def_from_top label 374
2025-04-24 18:05:41,853 idom 180 from label 374
2025-04-24 18:05:41,853 find_def_from_bottom label 180
2025-04-24 18:05:41,853 replaced with: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:41,853 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,853 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,853 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,853 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,853 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,853 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,853 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,853 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,853 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,853 on stmt: jump 646
2025-04-24 18:05:41,853 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,853 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,853 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,853 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,853 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,853 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,853 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,853 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,853 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,853 on stmt: k = $phi648.2
2025-04-24 18:05:41,853 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,853 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,853 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,853 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,853 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,853 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,853 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,853 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,853 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,853 on stmt: $binop_add740.27 = n + k
2025-04-24 18:05:41,853 find_def var='n' stmt=$binop_add740.27 = n + k
2025-04-24 18:05:41,853 find_def_from_top label 648
2025-04-24 18:05:41,853 idom 646 from label 648
2025-04-24 18:05:41,853 find_def_from_bottom label 646
2025-04-24 18:05:41,853 find_def_from_top label 646
2025-04-24 18:05:41,853 idom 500 from label 646
2025-04-24 18:05:41,853 find_def_from_bottom label 500
2025-04-24 18:05:41,858 find_def_from_top label 500
2025-04-24 18:05:41,858 idom 374 from label 500
2025-04-24 18:05:41,858 find_def_from_bottom label 374
2025-04-24 18:05:41,858 find_def_from_top label 374
2025-04-24 18:05:41,858 idom 180 from label 374
2025-04-24 18:05:41,858 find_def_from_bottom label 180
2025-04-24 18:05:41,858 replaced with: $binop_add740.27 = n.1 + k
2025-04-24 18:05:41,858 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,858 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,858 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,858 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,858 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,858 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,858 on stmt: jump 646
2025-04-24 18:05:41,858 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,858 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,858 on stmt: jump 176
2025-04-24 18:05:41,858 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,858 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8910>
2025-04-24 18:05:41,858 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,858 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,858 on stmt: return $784return_value.1
2025-04-24 18:05:41,858 Fix SSA violator on var frac
2025-04-24 18:05:41,858 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,858 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,858 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,858 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,858 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,858 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,858 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,858 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,858 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,858 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,858 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,858 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,858 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,858 on stmt: n = const(int, 0)
2025-04-24 18:05:41,858 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,858 first assign: frac
2025-04-24 18:05:41,858 replaced with: frac = const(float, 0.0)
2025-04-24 18:05:41,858 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,858 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,858 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,858 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,858 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,858 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,858 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,858 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,866 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,866 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,866 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,866 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,866 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,866 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,866 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,866 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,866 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,866 on stmt: jump 176
2025-04-24 18:05:41,866 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,866 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,866 on stmt: jump 178
2025-04-24 18:05:41,866 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,866 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,866 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,866 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,866 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,866 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,866 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,866 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,866 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,866 on stmt: t = $phi180.1
2025-04-24 18:05:41,866 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,866 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,866 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,866 on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:41,866 on stmt: frac = scale * $binop_sub234.12
2025-04-24 18:05:41,866 replaced with: frac.1 = scale * $binop_sub234.12
2025-04-24 18:05:41,866 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,866 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,866 on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,866 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,866 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,866 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,866 on stmt: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:41,866 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,866 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,866 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,866 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,866 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,866 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,866 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,866 on stmt: jump 374
2025-04-24 18:05:41,866 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,866 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,866 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,866 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,866 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,866 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,866 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,866 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,866 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,866 on stmt: i = $phi376.2
2025-04-24 18:05:41,866 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,866 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,866 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,866 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,866 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,866 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,866 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,866 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,866 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,866 on stmt: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:41,866 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,866 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,866 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,866 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,866 on stmt: jump 374
2025-04-24 18:05:41,866 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,866 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,866 on stmt: $binop_sub504.3 = scale - frac
2025-04-24 18:05:41,866 on stmt: frac = $binop_sub504.3
2025-04-24 18:05:41,866 replaced with: frac.2 = $binop_sub504.3
2025-04-24 18:05:41,866 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,866 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,866 on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,866 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,866 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,866 on stmt: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:41,866 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,866 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,866 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,866 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,866 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,866 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,866 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,866 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,866 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,866 on stmt: jump 646
2025-04-24 18:05:41,866 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,866 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,866 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,866 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,866 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,866 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,866 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,866 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,866 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,866 on stmt: k = $phi648.2
2025-04-24 18:05:41,866 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,866 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,866 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,866 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,866 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,866 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,873 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,873 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,873 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,873 on stmt: $binop_add740.27 = n.1 + k
2025-04-24 18:05:41,873 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,873 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,873 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,873 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,873 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,873 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,873 on stmt: jump 646
2025-04-24 18:05:41,873 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,873 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,873 on stmt: jump 176
2025-04-24 18:05:41,873 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,873 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDB50>
2025-04-24 18:05:41,873 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,873 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,873 on stmt: return $784return_value.1
2025-04-24 18:05:41,873 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027151EC8910>],
             180: [<numba.core.ir.Assign object at 0x0000027151EAFB50>],
             500: [<numba.core.ir.Assign object at 0x0000027151EAF3D0>]})
2025-04-24 18:05:41,873 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,873 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,873 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,873 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,873 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,873 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,873 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,873 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,873 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,873 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,873 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,873 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,873 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,873 on stmt: n = const(int, 0)
2025-04-24 18:05:41,873 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,873 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,873 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,873 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,873 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,873 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,873 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,873 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,873 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,873 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,873 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,873 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,873 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,873 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,873 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,873 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,873 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,873 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,873 on stmt: jump 176
2025-04-24 18:05:41,873 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,873 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,873 on stmt: jump 178
2025-04-24 18:05:41,873 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,873 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,873 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,873 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,873 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,873 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,873 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,873 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,873 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,883 on stmt: t = $phi180.1
2025-04-24 18:05:41,883 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,883 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,883 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,883 on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:41,883 on stmt: frac.1 = scale * $binop_sub234.12
2025-04-24 18:05:41,883 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,883 find_def var='frac' stmt=index_frac = frac * num_table
2025-04-24 18:05:41,883 replaced with: index_frac = frac.1 * num_table
2025-04-24 18:05:41,883 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,883 on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,883 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,883 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,883 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,883 on stmt: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:41,883 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,883 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,883 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,883 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,883 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,883 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,883 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,883 on stmt: jump 374
2025-04-24 18:05:41,883 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,883 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,883 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,883 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,883 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,883 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,883 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,883 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,883 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,883 on stmt: i = $phi376.2
2025-04-24 18:05:41,883 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,883 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,883 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,883 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,883 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,883 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,883 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,883 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,883 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,883 on stmt: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:41,883 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,883 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,883 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,883 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,883 on stmt: jump 374
2025-04-24 18:05:41,883 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,883 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,883 on stmt: $binop_sub504.3 = scale - frac
2025-04-24 18:05:41,883 find_def var='frac' stmt=$binop_sub504.3 = scale - frac
2025-04-24 18:05:41,883 find_def_from_top label 500
2025-04-24 18:05:41,883 idom 374 from label 500
2025-04-24 18:05:41,883 find_def_from_bottom label 374
2025-04-24 18:05:41,883 find_def_from_top label 374
2025-04-24 18:05:41,883 idom 180 from label 374
2025-04-24 18:05:41,883 find_def_from_bottom label 180
2025-04-24 18:05:41,883 replaced with: $binop_sub504.3 = scale - frac.1
2025-04-24 18:05:41,883 on stmt: frac.2 = $binop_sub504.3
2025-04-24 18:05:41,883 on stmt: index_frac = frac * num_table
2025-04-24 18:05:41,888 find_def var='frac' stmt=index_frac = frac * num_table
2025-04-24 18:05:41,888 replaced with: index_frac = frac.2 * num_table
2025-04-24 18:05:41,888 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,888 on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,888 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,888 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,888 on stmt: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:41,888 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,888 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,888 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,888 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,888 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,888 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,888 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,888 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,888 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,888 on stmt: jump 646
2025-04-24 18:05:41,888 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,888 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,888 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,888 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,888 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,888 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,888 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,888 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,888 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,888 on stmt: k = $phi648.2
2025-04-24 18:05:41,888 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,888 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,888 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,888 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,888 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,888 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,888 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,888 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,888 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,888 on stmt: $binop_add740.27 = n.1 + k
2025-04-24 18:05:41,888 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,888 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,888 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,888 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,888 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,888 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,888 on stmt: jump 646
2025-04-24 18:05:41,888 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,888 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,888 on stmt: jump 176
2025-04-24 18:05:41,888 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,888 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E63B50>
2025-04-24 18:05:41,888 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,888 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,888 on stmt: return $784return_value.1
2025-04-24 18:05:41,888 Fix SSA violator on var index_frac
2025-04-24 18:05:41,888 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,888 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,888 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,888 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,888 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,888 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,888 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,888 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,888 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,888 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,888 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,888 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,888 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,888 on stmt: n = const(int, 0)
2025-04-24 18:05:41,888 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,888 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,888 first assign: index_frac
2025-04-24 18:05:41,888 replaced with: index_frac = const(float, 0.0)
2025-04-24 18:05:41,888 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,893 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,893 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,893 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,893 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,893 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,893 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,893 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,893 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,893 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,893 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,893 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,893 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,893 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,893 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,893 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,893 on stmt: jump 176
2025-04-24 18:05:41,893 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,893 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,893 on stmt: jump 178
2025-04-24 18:05:41,893 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,893 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,895 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,895 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,895 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,895 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,895 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,895 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,895 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,895 on stmt: t = $phi180.1
2025-04-24 18:05:41,895 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,895 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,895 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,895 on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:41,895 on stmt: frac.1 = scale * $binop_sub234.12
2025-04-24 18:05:41,895 on stmt: index_frac = frac.1 * num_table
2025-04-24 18:05:41,895 replaced with: index_frac.1 = frac.1 * num_table
2025-04-24 18:05:41,895 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,895 on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,895 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,895 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,895 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,895 on stmt: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:41,895 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,895 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,895 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,895 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,895 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,895 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,895 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,895 on stmt: jump 374
2025-04-24 18:05:41,895 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,895 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,895 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,895 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,895 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,895 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,895 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,895 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,895 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,895 on stmt: i = $phi376.2
2025-04-24 18:05:41,895 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,895 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,895 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,895 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,895 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,895 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,895 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,895 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,895 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,895 on stmt: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:41,895 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,895 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,895 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,895 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,895 on stmt: jump 374
2025-04-24 18:05:41,895 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,895 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,895 on stmt: $binop_sub504.3 = scale - frac.1
2025-04-24 18:05:41,895 on stmt: frac.2 = $binop_sub504.3
2025-04-24 18:05:41,895 on stmt: index_frac = frac.2 * num_table
2025-04-24 18:05:41,895 replaced with: index_frac.2 = frac.2 * num_table
2025-04-24 18:05:41,895 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,895 on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,895 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,895 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,895 on stmt: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:41,895 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,903 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,903 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,903 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,903 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,903 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,903 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,903 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,903 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,903 on stmt: jump 646
2025-04-24 18:05:41,903 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,903 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,903 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,903 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,903 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,903 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,903 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,903 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,903 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,903 on stmt: k = $phi648.2
2025-04-24 18:05:41,903 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,903 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,903 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,903 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,903 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,903 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,903 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,903 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,903 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,903 on stmt: $binop_add740.27 = n.1 + k
2025-04-24 18:05:41,903 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,903 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,903 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,903 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,903 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,903 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,903 on stmt: jump 646
2025-04-24 18:05:41,903 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,903 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,903 on stmt: jump 176
2025-04-24 18:05:41,903 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,903 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBDC10>
2025-04-24 18:05:41,903 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,903 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,903 on stmt: return $784return_value.1
2025-04-24 18:05:41,903 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027151E63B50>],
             180: [<numba.core.ir.Assign object at 0x0000027151EAE450>],
             500: [<numba.core.ir.Assign object at 0x0000027151EACD10>]})
2025-04-24 18:05:41,903 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,903 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,903 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,903 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,903 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,903 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,903 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,903 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,903 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,903 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,903 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,903 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,903 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,903 on stmt: n = const(int, 0)
2025-04-24 18:05:41,903 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,903 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,903 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,903 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,903 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,903 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,903 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,903 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,903 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,903 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,903 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,903 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,903 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,903 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,903 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,903 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,903 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,908 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,908 on stmt: jump 176
2025-04-24 18:05:41,908 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,908 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,908 on stmt: jump 178
2025-04-24 18:05:41,908 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,908 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,908 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,908 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,908 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,908 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,908 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,908 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,908 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,908 on stmt: t = $phi180.1
2025-04-24 18:05:41,908 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,908 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,908 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,908 on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:41,908 on stmt: frac.1 = scale * $binop_sub234.12
2025-04-24 18:05:41,908 on stmt: index_frac.1 = frac.1 * num_table
2025-04-24 18:05:41,908 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,908 on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,908 find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,908 replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,908 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,908 find_def var='index_frac' stmt=eta = index_frac - offset
2025-04-24 18:05:41,908 replaced with: eta = index_frac.1 - offset
2025-04-24 18:05:41,908 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,908 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,908 on stmt: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:41,908 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,908 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,908 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,908 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,908 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,908 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,908 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,908 on stmt: jump 374
2025-04-24 18:05:41,908 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,908 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,908 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,908 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,913 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,913 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,913 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,913 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,913 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,913 on stmt: i = $phi376.2
2025-04-24 18:05:41,913 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,913 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,913 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,913 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,913 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,913 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,913 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,913 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,913 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,913 on stmt: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:41,913 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,913 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,913 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,913 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,913 on stmt: jump 374
2025-04-24 18:05:41,913 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,918 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,918 on stmt: $binop_sub504.3 = scale - frac.1
2025-04-24 18:05:41,918 on stmt: frac.2 = $binop_sub504.3
2025-04-24 18:05:41,918 on stmt: index_frac.2 = frac.2 * num_table
2025-04-24 18:05:41,918 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,918 on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,918 find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,918 replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,918 on stmt: eta = index_frac - offset
2025-04-24 18:05:41,918 find_def var='index_frac' stmt=eta = index_frac - offset
2025-04-24 18:05:41,918 replaced with: eta = index_frac.2 - offset
2025-04-24 18:05:41,918 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,918 on stmt: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:41,918 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,918 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,918 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,918 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,918 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,918 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,918 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,918 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,918 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,918 on stmt: jump 646
2025-04-24 18:05:41,918 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,918 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,918 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,918 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,918 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,918 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,918 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,918 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,918 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,918 on stmt: k = $phi648.2
2025-04-24 18:05:41,918 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,918 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,918 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,918 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,918 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,918 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,918 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,918 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,918 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,918 on stmt: $binop_add740.27 = n.1 + k
2025-04-24 18:05:41,918 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,918 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,918 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,918 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,918 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,918 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,918 on stmt: jump 646
2025-04-24 18:05:41,918 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,918 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,918 on stmt: jump 176
2025-04-24 18:05:41,918 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,918 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EC8D50>
2025-04-24 18:05:41,918 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,918 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,918 on stmt: return $784return_value.1
2025-04-24 18:05:41,918 Fix SSA violator on var offset
2025-04-24 18:05:41,918 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,918 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,918 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,918 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,918 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,918 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,918 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,918 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,918 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,918 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,918 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,918 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,918 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,918 on stmt: n = const(int, 0)
2025-04-24 18:05:41,918 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,918 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,918 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,918 first assign: offset
2025-04-24 18:05:41,918 replaced with: offset = const(int, 0)
2025-04-24 18:05:41,918 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,918 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,923 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,923 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,923 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,923 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,923 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,923 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,923 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,923 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,923 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,923 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,923 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,923 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,923 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,923 on stmt: jump 176
2025-04-24 18:05:41,923 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,923 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,923 on stmt: jump 178
2025-04-24 18:05:41,923 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,923 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,923 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,923 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,923 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,923 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,923 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,923 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,923 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,923 on stmt: t = $phi180.1
2025-04-24 18:05:41,923 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,923 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,923 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,923 on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:41,923 on stmt: frac.1 = scale * $binop_sub234.12
2025-04-24 18:05:41,923 on stmt: index_frac.1 = frac.1 * num_table
2025-04-24 18:05:41,923 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,923 on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,923 replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,923 on stmt: eta = index_frac.1 - offset
2025-04-24 18:05:41,923 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,923 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,923 on stmt: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:41,923 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,923 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,923 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,923 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,923 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,923 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,923 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,923 on stmt: jump 374
2025-04-24 18:05:41,923 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,923 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,923 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,923 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,923 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,923 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,923 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,923 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,923 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,923 on stmt: i = $phi376.2
2025-04-24 18:05:41,923 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,923 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,923 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,923 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,923 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,923 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,930 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,930 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,930 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,930 on stmt: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:41,933 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,933 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,933 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,933 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,933 on stmt: jump 374
2025-04-24 18:05:41,933 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,933 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,933 on stmt: $binop_sub504.3 = scale - frac.1
2025-04-24 18:05:41,933 on stmt: frac.2 = $binop_sub504.3
2025-04-24 18:05:41,933 on stmt: index_frac.2 = frac.2 * num_table
2025-04-24 18:05:41,933 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,933 on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,933 replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,933 on stmt: eta = index_frac.2 - offset
2025-04-24 18:05:41,933 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,933 on stmt: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:41,933 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,933 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,933 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,933 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,933 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,933 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,933 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,933 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,933 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,933 on stmt: jump 646
2025-04-24 18:05:41,933 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,933 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,933 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,933 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,933 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,933 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,933 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,933 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,933 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,933 on stmt: k = $phi648.2
2025-04-24 18:05:41,933 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,933 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,933 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,933 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,933 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,933 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,933 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,933 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,933 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,933 on stmt: $binop_add740.27 = n.1 + k
2025-04-24 18:05:41,933 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,933 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,933 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,933 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,933 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,933 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,933 on stmt: jump 646
2025-04-24 18:05:41,933 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,933 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,933 on stmt: jump 176
2025-04-24 18:05:41,933 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,933 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EAF350>
2025-04-24 18:05:41,933 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,933 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,933 on stmt: return $784return_value.1
2025-04-24 18:05:41,933 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027151EADA50>],
             180: [<numba.core.ir.Assign object at 0x0000027151EAE690>],
             500: [<numba.core.ir.Assign object at 0x0000027151EB1E10>]})
2025-04-24 18:05:41,933 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,933 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,933 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,933 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,933 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,938 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,938 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,938 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,938 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,938 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,938 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,938 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,938 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,938 on stmt: n = const(int, 0)
2025-04-24 18:05:41,938 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,938 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,938 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,938 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,938 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,938 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,938 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,938 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,938 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,938 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,938 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,938 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,938 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,938 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,938 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,938 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,938 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,938 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,938 on stmt: jump 176
2025-04-24 18:05:41,938 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,938 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,938 on stmt: jump 178
2025-04-24 18:05:41,938 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,938 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,938 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,938 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,938 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,938 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,938 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,938 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,938 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,938 on stmt: t = $phi180.1
2025-04-24 18:05:41,938 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,938 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,938 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,938 on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:41,938 on stmt: frac.1 = scale * $binop_sub234.12
2025-04-24 18:05:41,938 on stmt: index_frac.1 = frac.1 * num_table
2025-04-24 18:05:41,938 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,938 on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,938 on stmt: eta = index_frac.1 - offset
2025-04-24 18:05:41,938 find_def var='offset' stmt=eta = index_frac.1 - offset
2025-04-24 18:05:41,938 replaced with: eta = index_frac.1 - offset.1
2025-04-24 18:05:41,938 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,938 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,938 on stmt: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:41,938 on stmt: $binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,938 find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
2025-04-24 18:05:41,938 replaced with: $binop_sub318.31 = nwin - offset.1
2025-04-24 18:05:41,938 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,938 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,938 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,938 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,938 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,938 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,938 on stmt: jump 374
2025-04-24 18:05:41,938 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,938 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,938 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,938 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,938 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,938 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,938 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,938 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,938 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,938 on stmt: i = $phi376.2
2025-04-24 18:05:41,938 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,938 on stmt: $binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,938 find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
2025-04-24 18:05:41,938 find_def_from_top label 376
2025-04-24 18:05:41,938 idom 374 from label 376
2025-04-24 18:05:41,938 find_def_from_bottom label 374
2025-04-24 18:05:41,938 find_def_from_top label 374
2025-04-24 18:05:41,943 idom 180 from label 374
2025-04-24 18:05:41,943 find_def_from_bottom label 180
2025-04-24 18:05:41,943 replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-04-24 18:05:41,943 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,943 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,943 on stmt: $binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,943 find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
2025-04-24 18:05:41,943 find_def_from_top label 376
2025-04-24 18:05:41,943 idom 374 from label 376
2025-04-24 18:05:41,943 find_def_from_bottom label 374
2025-04-24 18:05:41,943 find_def_from_top label 374
2025-04-24 18:05:41,943 idom 180 from label 374
2025-04-24 18:05:41,943 find_def_from_bottom label 180
2025-04-24 18:05:41,943 replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-04-24 18:05:41,943 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,943 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,943 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,943 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,943 on stmt: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:41,945 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,945 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,953 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,953 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,953 on stmt: jump 374
2025-04-24 18:05:41,953 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,953 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,953 on stmt: $binop_sub504.3 = scale - frac.1
2025-04-24 18:05:41,953 on stmt: frac.2 = $binop_sub504.3
2025-04-24 18:05:41,953 on stmt: index_frac.2 = frac.2 * num_table
2025-04-24 18:05:41,953 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,953 on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,953 on stmt: eta = index_frac.2 - offset
2025-04-24 18:05:41,953 find_def var='offset' stmt=eta = index_frac.2 - offset
2025-04-24 18:05:41,953 replaced with: eta = index_frac.2 - offset.2
2025-04-24 18:05:41,953 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,953 on stmt: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:41,953 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,953 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,953 on stmt: $binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,953 find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
2025-04-24 18:05:41,953 replaced with: $binop_sub590.23 = nwin - offset.2
2025-04-24 18:05:41,953 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,953 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,953 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,953 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,953 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,953 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,953 on stmt: jump 646
2025-04-24 18:05:41,953 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,953 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,953 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,953 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,953 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,953 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,953 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,953 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,953 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,953 on stmt: k = $phi648.2
2025-04-24 18:05:41,953 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,953 on stmt: $binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,953 find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
2025-04-24 18:05:41,953 find_def_from_top label 648
2025-04-24 18:05:41,953 idom 646 from label 648
2025-04-24 18:05:41,953 find_def_from_bottom label 646
2025-04-24 18:05:41,953 find_def_from_top label 646
2025-04-24 18:05:41,953 idom 500 from label 646
2025-04-24 18:05:41,953 find_def_from_bottom label 500
2025-04-24 18:05:41,953 replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-04-24 18:05:41,953 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,953 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,953 on stmt: $binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,953 find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
2025-04-24 18:05:41,953 find_def_from_top label 648
2025-04-24 18:05:41,953 idom 646 from label 648
2025-04-24 18:05:41,953 find_def_from_bottom label 646
2025-04-24 18:05:41,953 find_def_from_top label 646
2025-04-24 18:05:41,953 idom 500 from label 646
2025-04-24 18:05:41,953 find_def_from_bottom label 500
2025-04-24 18:05:41,953 replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-04-24 18:05:41,953 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,953 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,953 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,953 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,953 on stmt: $binop_add740.27 = n.1 + k
2025-04-24 18:05:41,953 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,953 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,953 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,953 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,953 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,953 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,953 on stmt: jump 646
2025-04-24 18:05:41,958 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,958 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,958 on stmt: jump 176
2025-04-24 18:05:41,958 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,958 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EBDC10>
2025-04-24 18:05:41,958 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,958 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,958 on stmt: return $784return_value.1
2025-04-24 18:05:41,958 Fix SSA violator on var eta
2025-04-24 18:05:41,958 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,958 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,958 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,958 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,958 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,958 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,958 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,958 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,958 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,958 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,958 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,958 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,958 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,958 on stmt: n = const(int, 0)
2025-04-24 18:05:41,958 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,958 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,958 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,958 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,958 first assign: eta
2025-04-24 18:05:41,958 replaced with: eta = const(float, 0.0)
2025-04-24 18:05:41,958 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,958 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,958 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,958 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,958 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,958 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,958 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,958 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,958 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,958 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,958 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,958 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,958 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,958 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,958 on stmt: jump 176
2025-04-24 18:05:41,958 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,958 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,958 on stmt: jump 178
2025-04-24 18:05:41,958 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,958 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,958 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,964 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,965 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,965 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,965 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,965 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,965 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,965 on stmt: t = $phi180.1
2025-04-24 18:05:41,965 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,965 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,965 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,965 on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:41,965 on stmt: frac.1 = scale * $binop_sub234.12
2025-04-24 18:05:41,965 on stmt: index_frac.1 = frac.1 * num_table
2025-04-24 18:05:41,965 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,965 on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,965 on stmt: eta = index_frac.1 - offset.1
2025-04-24 18:05:41,965 replaced with: eta.1 = index_frac.1 - offset.1
2025-04-24 18:05:41,965 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,965 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,965 on stmt: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:41,965 on stmt: $binop_sub318.31 = nwin - offset.1
2025-04-24 18:05:41,965 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,965 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,965 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,965 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,965 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,965 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,965 on stmt: jump 374
2025-04-24 18:05:41,965 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,965 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,965 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,965 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,965 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,965 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,965 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,965 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,965 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,965 on stmt: i = $phi376.2
2025-04-24 18:05:41,965 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,965 on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-04-24 18:05:41,965 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,965 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,965 on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-04-24 18:05:41,965 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,965 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,965 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,965 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,965 on stmt: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:41,965 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,965 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,965 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,965 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,965 on stmt: jump 374
2025-04-24 18:05:41,965 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,965 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,965 on stmt: $binop_sub504.3 = scale - frac.1
2025-04-24 18:05:41,965 on stmt: frac.2 = $binop_sub504.3
2025-04-24 18:05:41,965 on stmt: index_frac.2 = frac.2 * num_table
2025-04-24 18:05:41,965 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,965 on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,965 on stmt: eta = index_frac.2 - offset.2
2025-04-24 18:05:41,965 replaced with: eta.2 = index_frac.2 - offset.2
2025-04-24 18:05:41,965 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,965 on stmt: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:41,965 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,965 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,965 on stmt: $binop_sub590.23 = nwin - offset.2
2025-04-24 18:05:41,965 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,965 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,965 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,965 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,965 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,965 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,965 on stmt: jump 646
2025-04-24 18:05:41,965 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,965 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,965 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,965 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,965 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,965 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,965 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,965 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,965 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,965 on stmt: k = $phi648.2
2025-04-24 18:05:41,965 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,965 on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-04-24 18:05:41,965 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,965 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,965 on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-04-24 18:05:41,965 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,965 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,965 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,965 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,973 on stmt: $binop_add740.27 = n.1 + k
2025-04-24 18:05:41,973 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,973 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,973 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,973 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,973 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,973 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,973 on stmt: jump 646
2025-04-24 18:05:41,973 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,973 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,973 on stmt: jump 176
2025-04-24 18:05:41,973 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,973 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EADE50>
2025-04-24 18:05:41,973 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,973 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,973 on stmt: return $784return_value.1
2025-04-24 18:05:41,973 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027151EADC10>],
             180: [<numba.core.ir.Assign object at 0x0000027151EB2FD0>],
             500: [<numba.core.ir.Assign object at 0x0000027151EB3ED0>]})
2025-04-24 18:05:41,973 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,973 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,973 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,973 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,973 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,973 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,973 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,973 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,973 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,973 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,973 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,973 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,973 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,973 on stmt: n = const(int, 0)
2025-04-24 18:05:41,973 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,973 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,973 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,973 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,973 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,973 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,973 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,973 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,973 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,973 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,973 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,973 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,973 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,973 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,973 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,973 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,973 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,973 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,973 on stmt: jump 176
2025-04-24 18:05:41,973 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,973 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,973 on stmt: jump 178
2025-04-24 18:05:41,973 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,973 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,973 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,973 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,973 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,973 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,973 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,973 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,973 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,973 on stmt: t = $phi180.1
2025-04-24 18:05:41,973 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,973 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,973 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,973 on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:41,973 on stmt: frac.1 = scale * $binop_sub234.12
2025-04-24 18:05:41,973 on stmt: index_frac.1 = frac.1 * num_table
2025-04-24 18:05:41,973 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,978 on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,978 on stmt: eta.1 = index_frac.1 - offset.1
2025-04-24 18:05:41,980 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,982 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,982 on stmt: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:41,983 on stmt: $binop_sub318.31 = nwin - offset.1
2025-04-24 18:05:41,983 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,983 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,983 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,983 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,983 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,983 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,983 on stmt: jump 374
2025-04-24 18:05:41,983 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,983 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,983 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,983 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,983 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,983 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,983 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,983 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,983 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,983 on stmt: i = $phi376.2
2025-04-24 18:05:41,983 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,983 on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-04-24 18:05:41,983 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,983 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,983 on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-04-24 18:05:41,983 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,983 on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,983 find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
2025-04-24 18:05:41,983 find_def_from_top label 376
2025-04-24 18:05:41,983 idom 374 from label 376
2025-04-24 18:05:41,983 find_def_from_bottom label 374
2025-04-24 18:05:41,983 find_def_from_top label 374
2025-04-24 18:05:41,983 idom 180 from label 374
2025-04-24 18:05:41,983 find_def_from_bottom label 180
2025-04-24 18:05:41,983 replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-04-24 18:05:41,983 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,983 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,983 on stmt: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:41,983 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,983 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,983 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,983 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,983 on stmt: jump 374
2025-04-24 18:05:41,983 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,983 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,983 on stmt: $binop_sub504.3 = scale - frac.1
2025-04-24 18:05:41,983 on stmt: frac.2 = $binop_sub504.3
2025-04-24 18:05:41,983 on stmt: index_frac.2 = frac.2 * num_table
2025-04-24 18:05:41,983 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,983 on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,983 on stmt: eta.2 = index_frac.2 - offset.2
2025-04-24 18:05:41,983 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,983 on stmt: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:41,983 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,983 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,983 on stmt: $binop_sub590.23 = nwin - offset.2
2025-04-24 18:05:41,983 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,983 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,983 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:41,983 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,983 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:41,983 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:41,983 on stmt: jump 646
2025-04-24 18:05:41,983 ==== SSA block rewrite pass on 646
2025-04-24 18:05:41,983 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,983 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:41,983 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:41,983 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:41,983 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:41,983 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:41,983 ==== SSA block rewrite pass on 648
2025-04-24 18:05:41,983 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,988 on stmt: k = $phi648.2
2025-04-24 18:05:41,988 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:41,988 on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-04-24 18:05:41,988 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,988 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:41,988 on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-04-24 18:05:41,988 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,988 on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,988 find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
2025-04-24 18:05:41,988 find_def_from_top label 648
2025-04-24 18:05:41,988 idom 646 from label 648
2025-04-24 18:05:41,988 find_def_from_bottom label 646
2025-04-24 18:05:41,988 find_def_from_top label 646
2025-04-24 18:05:41,988 idom 500 from label 646
2025-04-24 18:05:41,988 find_def_from_bottom label 500
2025-04-24 18:05:41,988 replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-04-24 18:05:41,988 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:41,988 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,988 on stmt: $binop_add740.27 = n.1 + k
2025-04-24 18:05:41,988 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:41,988 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:41,988 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:41,988 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:41,988 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,988 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:41,988 on stmt: jump 646
2025-04-24 18:05:41,988 ==== SSA block rewrite pass on 778
2025-04-24 18:05:41,988 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,988 on stmt: jump 176
2025-04-24 18:05:41,988 ==== SSA block rewrite pass on 782
2025-04-24 18:05:41,988 Running <numba.core.ssa._FixSSAVars object at 0x0000027151E75750>
2025-04-24 18:05:41,988 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:41,988 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:41,988 on stmt: return $784return_value.1
2025-04-24 18:05:41,988 Fix SSA violator on var weight
2025-04-24 18:05:41,988 ==== SSA block rewrite pass on 0
2025-04-24 18:05:41,988 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:41,988 on stmt: x = arg(0, name=x)
2025-04-24 18:05:41,988 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:41,988 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:41,988 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:41,988 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:41,988 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:41,988 on stmt: y = arg(6, name=y)
2025-04-24 18:05:41,988 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:41,988 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:41,988 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,988 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:41,988 on stmt: n = const(int, 0)
2025-04-24 18:05:41,988 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:41,988 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:41,988 on stmt: offset = const(int, 0)
2025-04-24 18:05:41,988 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:41,988 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:41,988 first assign: weight
2025-04-24 18:05:41,988 replaced with: weight = const(float, 0.0)
2025-04-24 18:05:41,988 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:41,988 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:41,988 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:41,988 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:41,988 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:41,988 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:41,988 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:41,988 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:41,988 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:41,988 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:41,988 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,988 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:41,988 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:41,988 on stmt: jump 176
2025-04-24 18:05:41,988 ==== SSA block rewrite pass on 176
2025-04-24 18:05:41,988 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:41,988 on stmt: jump 178
2025-04-24 18:05:41,988 ==== SSA block rewrite pass on 178
2025-04-24 18:05:41,988 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:41,993 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:41,993 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:41,993 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:41,993 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:41,993 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:41,993 ==== SSA block rewrite pass on 180
2025-04-24 18:05:41,993 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:41,993 on stmt: t = $phi180.1
2025-04-24 18:05:41,993 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,993 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:41,993 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,993 on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:41,993 on stmt: frac.1 = scale * $binop_sub234.12
2025-04-24 18:05:41,993 on stmt: index_frac.1 = frac.1 * num_table
2025-04-24 18:05:41,993 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:41,993 on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,993 on stmt: eta.1 = index_frac.1 - offset.1
2025-04-24 18:05:41,993 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:41,993 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:41,993 on stmt: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:41,995 on stmt: $binop_sub318.31 = nwin - offset.1
2025-04-24 18:05:41,995 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:41,995 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,995 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:41,995 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,995 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:41,995 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:41,995 on stmt: jump 374
2025-04-24 18:05:41,995 ==== SSA block rewrite pass on 374
2025-04-24 18:05:41,995 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:41,995 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:41,995 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:41,995 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:41,995 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:41,995 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:41,995 ==== SSA block rewrite pass on 376
2025-04-24 18:05:41,995 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:41,995 on stmt: i = $phi376.2
2025-04-24 18:05:41,995 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:41,995 on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-04-24 18:05:41,995 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:41,995 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:41,995 on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-04-24 18:05:41,995 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:41,995 on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-04-24 18:05:41,995 on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,995 replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:41,995 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:41,995 on stmt: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:41,995 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:41,995 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:41,995 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:41,995 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:41,995 on stmt: jump 374
2025-04-24 18:05:41,995 ==== SSA block rewrite pass on 500
2025-04-24 18:05:41,995 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:41,995 on stmt: $binop_sub504.3 = scale - frac.1
2025-04-24 18:05:41,995 on stmt: frac.2 = $binop_sub504.3
2025-04-24 18:05:41,995 on stmt: index_frac.2 = frac.2 * num_table
2025-04-24 18:05:41,995 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:41,995 on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:41,995 on stmt: eta.2 = index_frac.2 - offset.2
2025-04-24 18:05:41,995 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:41,995 on stmt: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:41,995 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:41,995 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:41,995 on stmt: $binop_sub590.23 = nwin - offset.2
2025-04-24 18:05:41,995 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:41,995 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,003 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:42,003 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,003 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:42,003 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:42,003 on stmt: jump 646
2025-04-24 18:05:42,003 ==== SSA block rewrite pass on 646
2025-04-24 18:05:42,003 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:42,003 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:42,003 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:42,003 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:42,003 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:42,003 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:42,003 ==== SSA block rewrite pass on 648
2025-04-24 18:05:42,003 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:42,003 on stmt: k = $phi648.2
2025-04-24 18:05:42,003 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:42,003 on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-04-24 18:05:42,003 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:42,003 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:42,003 on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-04-24 18:05:42,003 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:42,003 on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-04-24 18:05:42,003 on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:42,003 replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:42,003 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:42,003 on stmt: $binop_add740.27 = n.1 + k
2025-04-24 18:05:42,003 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:42,003 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:42,003 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:42,003 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:42,003 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:42,003 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:42,003 on stmt: jump 646
2025-04-24 18:05:42,003 ==== SSA block rewrite pass on 778
2025-04-24 18:05:42,003 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:42,003 on stmt: jump 176
2025-04-24 18:05:42,003 ==== SSA block rewrite pass on 782
2025-04-24 18:05:42,003 Running <numba.core.ssa._FreshVarHandler object at 0x0000027151EBC090>
2025-04-24 18:05:42,003 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:42,003 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:42,003 on stmt: return $784return_value.1
2025-04-24 18:05:42,003 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000027151EBDC10>],
             376: [<numba.core.ir.Assign object at 0x0000027151EB0990>],
             648: [<numba.core.ir.Assign object at 0x0000027151EB0D90>]})
2025-04-24 18:05:42,003 ==== SSA block rewrite pass on 0
2025-04-24 18:05:42,003 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,003 on stmt: x = arg(0, name=x)
2025-04-24 18:05:42,003 on stmt: t_out = arg(1, name=t_out)
2025-04-24 18:05:42,003 on stmt: interp_win = arg(2, name=interp_win)
2025-04-24 18:05:42,003 on stmt: interp_delta = arg(3, name=interp_delta)
2025-04-24 18:05:42,003 on stmt: num_table = arg(4, name=num_table)
2025-04-24 18:05:42,003 on stmt: scale = arg(5, name=scale)
2025-04-24 18:05:42,003 on stmt: y = arg(6, name=y)
2025-04-24 18:05:42,003 on stmt: $4load_global.0 = global(int: <class 'int'>)
2025-04-24 18:05:42,003 on stmt: $binop_mul20.4 = scale * num_table
2025-04-24 18:05:42,003 on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,003 on stmt: time_register = const(float, 0.0)
2025-04-24 18:05:42,003 on stmt: n = const(int, 0)
2025-04-24 18:05:42,003 on stmt: frac = const(float, 0.0)
2025-04-24 18:05:42,003 on stmt: index_frac = const(float, 0.0)
2025-04-24 18:05:42,003 on stmt: offset = const(int, 0)
2025-04-24 18:05:42,003 on stmt: eta = const(float, 0.0)
2025-04-24 18:05:42,003 on stmt: weight = const(float, 0.0)
2025-04-24 18:05:42,003 on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
2025-04-24 18:05:42,003 on stmt: $const80.15 = const(int, 0)
2025-04-24 18:05:42,003 on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15, fn=<built-in function getitem>)
2025-04-24 18:05:42,003 on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
2025-04-24 18:05:42,003 on stmt: $const106.19 = const(int, 0)
2025-04-24 18:05:42,003 on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19, fn=<built-in function getitem>)
2025-04-24 18:05:42,003 on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
2025-04-24 18:05:42,003 on stmt: $const132.23 = const(int, 0)
2025-04-24 18:05:42,003 on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23, fn=<built-in function getitem>)
2025-04-24 18:05:42,003 on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
2025-04-24 18:05:42,003 on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,003 on stmt: $174get_iter.29 = getiter(value=$164call.28)
2025-04-24 18:05:42,003 on stmt: $phi178.0 = $174get_iter.29
2025-04-24 18:05:42,003 on stmt: jump 176
2025-04-24 18:05:42,008 ==== SSA block rewrite pass on 176
2025-04-24 18:05:42,008 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,008 on stmt: jump 178
2025-04-24 18:05:42,008 ==== SSA block rewrite pass on 178
2025-04-24 18:05:42,008 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,008 on stmt: $178for_iter.1 = iternext(value=$phi178.0)
2025-04-24 18:05:42,008 on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
2025-04-24 18:05:42,008 on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
2025-04-24 18:05:42,008 on stmt: $phi180.1 = $178for_iter.2
2025-04-24 18:05:42,008 on stmt: branch $178for_iter.3, 180, 782
2025-04-24 18:05:42,008 ==== SSA block rewrite pass on 180
2025-04-24 18:05:42,008 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,008 on stmt: t = $phi180.1
2025-04-24 18:05:42,008 on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:42,008 on stmt: $198load_global.5 = global(int: <class 'int'>)
2025-04-24 18:05:42,008 on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,008 on stmt: $binop_sub234.12 = time_register.1 - n.1
2025-04-24 18:05:42,008 on stmt: frac.1 = scale * $binop_sub234.12
2025-04-24 18:05:42,008 on stmt: index_frac.1 = frac.1 * num_table
2025-04-24 18:05:42,008 on stmt: $254load_global.17 = global(int: <class 'int'>)
2025-04-24 18:05:42,008 on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,008 on stmt: eta.1 = index_frac.1 - offset.1
2025-04-24 18:05:42,008 on stmt: $294load_global.24 = global(min: <built-in function min>)
2025-04-24 18:05:42,008 on stmt: $const308.27 = const(int, 1)
2025-04-24 18:05:42,008 on stmt: $binop_add310.28 = n.1 + $const308.27
2025-04-24 18:05:42,008 on stmt: $binop_sub318.31 = nwin - offset.1
2025-04-24 18:05:42,008 on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
2025-04-24 18:05:42,008 on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,008 on stmt: $344load_global.35 = global(range: <class 'range'>)
2025-04-24 18:05:42,008 on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,008 on stmt: $372get_iter.39 = getiter(value=$362call.38)
2025-04-24 18:05:42,008 on stmt: $phi374.1 = $372get_iter.39
2025-04-24 18:05:42,008 on stmt: jump 374
2025-04-24 18:05:42,008 ==== SSA block rewrite pass on 374
2025-04-24 18:05:42,008 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,008 on stmt: $374for_iter.2 = iternext(value=$phi374.1)
2025-04-24 18:05:42,008 on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
2025-04-24 18:05:42,008 on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
2025-04-24 18:05:42,008 on stmt: $phi376.2 = $374for_iter.3
2025-04-24 18:05:42,008 on stmt: branch $374for_iter.4, 376, 500
2025-04-24 18:05:42,008 ==== SSA block rewrite pass on 376
2025-04-24 18:05:42,008 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,008 on stmt: i = $phi376.2
2025-04-24 18:05:42,008 on stmt: $binop_mul386.7 = i * index_step
2025-04-24 18:05:42,008 on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
2025-04-24 18:05:42,008 on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
2025-04-24 18:05:42,008 on stmt: $binop_mul414.15 = i * index_step
2025-04-24 18:05:42,008 on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
2025-04-24 18:05:42,014 on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
2025-04-24 18:05:42,015 on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
2025-04-24 18:05:42,015 on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
2025-04-24 18:05:42,015 on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:42,015 on stmt: $binop_sub468.27 = n.1 - i
2025-04-24 18:05:42,015 on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
2025-04-24 18:05:42,015 on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:42,015 find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
2025-04-24 18:05:42,015 replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
2025-04-24 18:05:42,015 on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:42,015 on stmt: y[t] = $binop_iadd486.30
2025-04-24 18:05:42,015 on stmt: jump 374
2025-04-24 18:05:42,015 ==== SSA block rewrite pass on 500
2025-04-24 18:05:42,015 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,015 on stmt: $binop_sub504.3 = scale - frac.1
2025-04-24 18:05:42,015 on stmt: frac.2 = $binop_sub504.3
2025-04-24 18:05:42,015 on stmt: index_frac.2 = frac.2 * num_table
2025-04-24 18:05:42,015 on stmt: $520load_global.7 = global(int: <class 'int'>)
2025-04-24 18:05:42,015 on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,015 on stmt: eta.2 = index_frac.2 - offset.2
2025-04-24 18:05:42,015 on stmt: $560load_global.14 = global(min: <built-in function min>)
2025-04-24 18:05:42,015 on stmt: $binop_sub576.18 = n_orig - n.1
2025-04-24 18:05:42,015 on stmt: $const580.19 = const(int, 1)
2025-04-24 18:05:42,015 on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19
2025-04-24 18:05:42,015 on stmt: $binop_sub590.23 = nwin - offset.2
2025-04-24 18:05:42,015 on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
2025-04-24 18:05:42,015 on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,015 on stmt: $616load_global.27 = global(range: <class 'range'>)
2025-04-24 18:05:42,015 on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-04-24 18:05:42,015 on stmt: $644get_iter.31 = getiter(value=$634call.30)
2025-04-24 18:05:42,015 on stmt: $phi646.1 = $644get_iter.31
2025-04-24 18:05:42,015 on stmt: jump 646
2025-04-24 18:05:42,015 ==== SSA block rewrite pass on 646
2025-04-24 18:05:42,015 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,015 on stmt: $646for_iter.2 = iternext(value=$phi646.1)
2025-04-24 18:05:42,015 on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
2025-04-24 18:05:42,015 on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
2025-04-24 18:05:42,015 on stmt: $phi648.2 = $646for_iter.3
2025-04-24 18:05:42,015 on stmt: branch $646for_iter.4, 648, 778
2025-04-24 18:05:42,015 ==== SSA block rewrite pass on 648
2025-04-24 18:05:42,015 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,015 on stmt: k = $phi648.2
2025-04-24 18:05:42,015 on stmt: $binop_mul658.7 = k * index_step
2025-04-24 18:05:42,015 on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
2025-04-24 18:05:42,015 on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
2025-04-24 18:05:42,015 on stmt: $binop_mul686.15 = k * index_step
2025-04-24 18:05:42,015 on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
2025-04-24 18:05:42,015 on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
2025-04-24 18:05:42,015 on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
2025-04-24 18:05:42,015 on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
2025-04-24 18:05:42,015 on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-04-24 18:05:42,015 on stmt: $binop_add740.27 = n.1 + k
2025-04-24 18:05:42,015 on stmt: $const744.28 = const(int, 1)
2025-04-24 18:05:42,015 on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28
2025-04-24 18:05:42,015 on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
2025-04-24 18:05:42,015 on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:42,015 find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
2025-04-24 18:05:42,015 replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
2025-04-24 18:05:42,015 on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
2025-04-24 18:05:42,015 on stmt: y[t] = $binop_iadd764.32
2025-04-24 18:05:42,015 on stmt: jump 646
2025-04-24 18:05:42,015 ==== SSA block rewrite pass on 778
2025-04-24 18:05:42,015 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,015 on stmt: jump 176
2025-04-24 18:05:42,015 ==== SSA block rewrite pass on 782
2025-04-24 18:05:42,015 Running <numba.core.ssa._FixSSAVars object at 0x0000027151EB0210>
2025-04-24 18:05:42,015 on stmt: $const782.0 = const(NoneType, None)
2025-04-24 18:05:42,015 on stmt: $784return_value.1 = cast(value=$const782.0)
2025-04-24 18:05:42,015 on stmt: return $784return_value.1
2025-04-24 18:05:43,968 [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:8398
2025-04-24 18:05:43,968 [33mPress CTRL+C to quit[0m
2025-04-24 18:05:45,022 Starting new HTTP connection (1): localhost:49962
2025-04-24 18:05:45,034 http://localhost:49962 "POST / HTTP/1.1" 200 2
2025-04-24 18:06:04,724  The audio to fps rounded: 70
2025-04-24 18:06:04,724 Fcl_MTH_A
2025-04-24 18:06:05,343 baked audio!
2025-04-24 18:06:05,365 baked ɑ at 1 and 1 when it should 0.045 and 1.740
2025-04-24 18:06:05,371 baked ɛ at 1 and 1 when it should 0.045 and 2.130
